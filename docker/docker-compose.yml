version: "3.9"

services:
  app:
    container_name: "${COMPOSE_PROJECT_NAME}app"
    build:
      context: .
      dockerfile: ./api/Dockerfile
#    command: uvicorn app:app_ --reload --host 0.0.0.0
    command: bash -c "alembic -c /app/alembic.ini upgrade head && uvicorn app:app_ --reload --host 0.0.0.0"
    volumes:
      - ../:/app
    depends_on:
      - db
    ports:
      - "8020:8000"
    env_file:
      - env_files/.env
    networks:
      - fastapi_network

  worker:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    command: celery -A app.internal.celery_app.celery worker --beat --loglevel=INFO
    container_name: "${COMPOSE_PROJECT_NAME}worker"
    volumes:
      - .:/usr/src/celery_reports
    env_file:
      - env_files/.env
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - redis
      - app
    networks:
      - fastapi_network

  redis:
    image: redis:6-alpine
    container_name: "${COMPOSE_PROJECT_NAME}redis"
    networks:
      - fastapi_network
  db:
    image: postgres:15.0-alpine
    container_name: "${COMPOSE_PROJECT_NAME}db"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - env_files/.env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    expose:
      - 5432
    ports:
      - "5444:5432"
    networks:
      - fastapi_network

#  dozzle:
#    container_name: dozzle_cs
#    image: amir20/dozzle:latest
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    ports:
#      - "9999:8080"

#  web:
#    container_name: "${COMPOSE_PROJECT_NAME}-nginx"
#    image: nginx:alpine
#    depends_on:
#      - app
#    ports:
#      - 8020:80
#    volumes:
#      - ./nginx:/etc/nginx/conf.d
#    networks:
#      - fastapi_network

volumes:
  postgres_data:
networks:
  fastapi_network:
    driver: bridge
